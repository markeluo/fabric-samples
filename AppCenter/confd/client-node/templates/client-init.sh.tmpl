#!/bin/bash
jq --version > /dev/null 2>&1
if [ $? -ne 0 ]; then
	echo "Please Install 'jq' https://stedolan.github.io/jq/ to execute this script"
	echo
	exit 1
fi
starttime=$(date +%s)

function initFun () {
  echo
  echo "POST request Create channel  ..."
  echo
  curl -s -X POST \
    http://localhost:4000/channels \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json" \
    -d '{
    "channelName":"mychannel",
    "channelConfigPath":"../artifacts/channel/channel.tx"
  }'
  echo
  echo
  sleep 5
  echo "POST request Join channel on Org1"
  echo
  curl -s -X POST \
    http://localhost:4000/channels/mychannel/peers \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json" \
    -d '{
    "peers": [{{$peers := lsdir "/hosts/peer/"}}{{$peer_size := len $peers}}{{range $index,$dir := lsdir "/hosts/peer/"}}{{$mindex := sub (sub $peer_size $index) 1}}{{$sid := printf "/hosts/peer/%s/sid" $dir}}"peer{{sub (getv $sid) 1}}"{{if $mindex}},{{end}}{{end}}]
  }'
  echo
  echo

  echo "POST Install chaincode on Org1"
  echo
  curl -s -X POST \
    http://localhost:4000/chaincodes \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json" \
    -d '{
    "peers": [{{$peers := lsdir "/hosts/peer/"}}{{$peer_size := len $peers}}{{range $index,$dir := lsdir "/hosts/peer/"}}{{$mindex := sub (sub $peer_size $index) 1}}{{$sid := printf "/hosts/peer/%s/sid" $dir}}"peer{{sub (getv $sid) 1}}"{{if $mindex}},{{end}}{{end}}],
    "chaincodeName":"testcode",
    "chaincodePath":"github.com/example_cc",
    "chaincodeVersion":"1.0"
  }'
  echo
  echo
  
  echo "POST instantiate chaincode on peer0 of Org1"
  echo
  curl -s -X POST \
    http://localhost:4000/channels/mychannel/chaincodes \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json" \
    -d '{
    "chaincodeName":"testcode",
    "chaincodeVersion":"1.0",
    "args":["a","100","b","200"]
  }'
  echo
  echo

  echo "POST invoke chaincode on peers of Org1 "
  echo
  TRX_ID=$(curl -s -X POST \
    http://localhost:4000/channels/mychannel/chaincodes/testcode \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json" \
    -d '{
    "fcn":"invoke",
    "args":["a","b","10"]
  }')
  echo "Transacton ID is $TRX_ID"
  echo
  echo

  echo "GET query chaincode on peer0 of Org1"
  echo
  curl -s -X GET \
    "http://localhost:4000/channels/mychannel/chaincodes/testcode?peer=peer0&fcn=query&args=%5B%22a%22%5D" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "GET query Block by blockNumber"
  echo
  curl -s -X GET \
    "http://localhost:4000/channels/mychannel/blocks/1?peer=peer0" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "GET query Transaction by TransactionID"
  echo
  curl -s -X GET http://localhost:4000/channels/mychannel/transactions/$TRX_ID?peer=peer0 \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  ############################################################################
  ### TODO: What to pass to fetch the Block information
  ############################################################################
  #echo "GET query Block by Hash"
  #echo
  #hash=????
  #curl -s -X GET \
  #  "http://localhost:4000/channels/mychannel/blocks?hash=$hash&peer=peer0" \
  #  -H "authorization: Bearer $ORG1_TOKEN" \
  #  -H "cache-control: no-cache" \
  #  -H "content-type: application/json" \
  #  -H "x-access-token: $ORG1_TOKEN"
  #echo
  #echo

  echo "GET query ChainInfo"
  echo
  curl -s -X GET \
    "http://localhost:4000/channels/mychannel?peer=peer0" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "GET query Installed chaincodes"
  echo
  curl -s -X GET \
    "http://localhost:4000/chaincodes?peer=peer0&type=installed" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "GET query Instantiated chaincodes"
  echo
  curl -s -X GET \
    "http://localhost:4000/chaincodes?peer=peer0&type=instantiated" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "GET query Channels"
  echo
  curl -s -X GET \
    "http://localhost:4000/channels?peer=peer0" \
    -H "authorization: Bearer $ORG1_TOKEN" \
    -H "content-type: application/json"
  echo
  echo

  echo "Total execution time : $(($(date +%s)-starttime)) secs ..."
}

echo "POST request Enroll on Org1  ..."
echo
ORG1_TOKEN=$(curl -s -X POST \
  http://localhost:4000/users \
  -H "content-type: application/x-www-form-urlencoded" \
  -d 'username=lwl&orgName=org1')
echo $ORG1_TOKEN
ORG1_TOKEN=$(echo $ORG1_TOKEN | jq ".token" | sed "s/\"//g")
echo
echo "ORG1 token is $ORG1_TOKEN"

echo "GET query Channels"
echo
peer0channel=$(curl -s -X GET \
  "http://localhost:4000/channels?peer=peer0" \
  -H "authorization: Bearer $ORG1_TOKEN" \
  -H "content-type: application/json"\
  )
echo
sleep 3
echo "channel######:"$peer0channel
if [ "$peer0channel"x = ""x ]; then
  initFun
fi